#!/bin/bash
set -eu
quiet=0
skip=0
push=0
directory=

for param in "$@"
do
    case $param in
    # Avoid verbose output
    -q|--quiet)
        quiet=1
        ;;
    # Skip if .git is not present
    -s|--skip)
        skip=1
        ;;
    # Push local changes
    -p|--push)
        push=1
        ;;
    -*)
        echo "Unknown parameter '$param'.'" >&2
        exit 1
        ;;
    *)
        if [ -n "$directory" ]
        then
            echo "Directory alreay set to '$directory'." >&2
            exit 1
        fi
        directory="$param"
    esac
done

test -n "$directory" || directory=.
cd "$directory"

if [ ! -d .git ]
then
    echo "ðŸ’¥ Directory .git not found, aborting. ðŸ’¥" >&2
    if [ $skip = 1 ]
    then
	    exit 0
    else
	    exit 2
    fi
fi

STATUS=$(git -c color.status=always status --short)

if [ -n "$STATUS" ]
then
	[ $quiet = 1 ] || echo -e "$STATUS\n"
	echo "ðŸ’©ðŸ’©ðŸ’© Cannot update master because your git working tree is dirty! ðŸ’©ðŸ’©ðŸ’©" >&2
	exit 3
fi

DEFAULT_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | cut -d '/' -f4)

if [ $quiet = 1 ]
then
    git fetch -q origin
    git remote prune origin
    git checkout -q $DEFAULT_BRANCH
    git pull -q --ff-only
    [ $push = 0 ] || git push -q
else
    set -x
    git fetch origin
    git remote prune origin
    git checkout $DEFAULT_BRANCH
    git pull --ff-only
    git status -vv
    [ $push = 0 ] || git push
fi
